<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"    
    xmlns:context="http://www.springframework.org/schema/context"    
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"   
    xsi:schemaLocation="http://www.springframework.org/schema/beans      
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd      
                        http://www.springframework.org/schema/context      
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd      
                        http://www.springframework.org/schema/mvc      
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/aop
	              		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	              		http://www.springframework.org/schema/tx
	              		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
        
    <!-- 自动扫描 -->
    <!-- 会自动扫描cn.com.clubank.weihang下的所有包，包括子包下除了@Controller的类。 -->    
    <context:component-scan base-package="cn.com.clubank.weihang">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
                 
    <!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:config/*.properties" />   
	
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">    
        <property name="driverClassName" value="${jdbc.driver}" />    
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />    
        <!-- 初始化连接大小 -->    
        <property name="initialSize" value="${jdbc.initialSize}"></property>    
        <!-- 连接池最大数量 -->    
        <property name="maxActive" value="${jdbc.maxActive}"></property>    
        <!-- 连接池最大空闲 -->    
        <property name="maxIdle" value="${jdbc.maxIdle}"></property>    
        <!-- 连接池最小空闲 -->    
        <property name="minIdle" value="${jdbc.minIdle}"></property>    
        <!-- 获取连接最大等待时间 -->    
        <property name="maxWait" value="${jdbc.maxWait}"></property>    
    </bean>    
    
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">    
        <property name="dataSource" ref="dataSource" />    
        <!-- 自动扫描mapping.xml文件 -->    
        <property name="mapperLocations" value="cn.com.clubank.weihang.**.dao/*.xml"></property>    
    </bean>
    
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">    
        <!--basePackage指定要扫描的包，在此包之下的映射器都会被搜索到。可指定多个包，包与包之间用逗号或分号分隔-->    
        <property name="basePackage" value="cn.com.clubank.weihang.**.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>    
    </bean>    
        
    <!-- 配置spring的事务管理器  (事务管理)transaction manager, use JtaTransactionManager for global tx -->    
    <bean id="txManager"    
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">    
        <property name="dataSource" ref="dataSource" />    
    </bean>
    
    <!--通过标签定义事务增强，并制定事务管理器  -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
	
    <!--定义属性，声明事务规则 -->
    	<tx:attributes>
	        <tx:method name="*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
    		<!-- 
	        <tx:method name="insert*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
	        <tx:method name="upd*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
	        <tx:method name="del*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
	        <tx:method name="execute*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
	        <tx:method name="do*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
	        <tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
	        <tx:method name="set*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="Exception"/>
	        <tx:method name="get*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
	        <tx:method name="show*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
	        <tx:method name="list*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
	        <tx:method name="query*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
	        <tx:method name="has*" propagation="SUPPORTS" isolation="DEFAULT" read-only="true"/>
	        <tx:method name="ntx*" propagation="NOT_SUPPORTED"/>  
	        -->
		</tx:attributes>
	</tx:advice>

	<!-- 切面配置 -->
    <aop:config>
        <aop:pointcut id="serviceMethod" expression="execution(* cn.com.clubank.weihang.manage.**.service..*.*(..))"/>
        <aop:pointcut id="beforeMethod" expression="execution(* cn.com.clubank.weihang.manage.**.dao..*.insert*(*)) || execution(* cn.com.clubank.weihang.manage.**.dao..*.update*(*))"/>
        <!-- 将事务增强与切入点组合（织入事务切面） -->
        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"/>
        <aop:advisor pointcut-ref="beforeMethod" advice-ref="weihAspect"/>
    </aop:config>
   
   <!-- 支付宝支付util -->
   <bean id="weihAlipayUtil" class="cn.com.clubank.weihang.common.weihpay.WeihAlipayUtil" factory-method="getInstance">
        <property name="appId" value="${alipay.appId}" />
        <property name="appPrivateKey" value="${alipay.appPrivateKey}" />
        <property name="alipayPublicKey" value="${alipay.publicKey}" />
        <property name="notifyUrl" value="${alipay.notifyUrl}" />
        <property name="returnUrl" value="${alipay.returnUrl}" />
    </bean>
</beans>
