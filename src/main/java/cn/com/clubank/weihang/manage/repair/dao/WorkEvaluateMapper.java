package cn.com.clubank.weihang.manage.repair.dao;

import cn.com.clubank.weihang.manage.repair.pojo.WorkEvaluate;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

/**
 * 评价表（数据访问层接口）
 * @author Liangwl
 *
 */
public interface WorkEvaluateMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_evaluate
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(String woeId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_evaluate
     *
     * @mbggenerated
     */
    int insert(WorkEvaluate record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_evaluate
     *
     * @mbggenerated
     */
    WorkEvaluate selectByPrimaryKey(String woeId);
    
    /**
     * 根据评价单号查询
     * @param EvaluateNo
     * @return
     */
    List<WorkEvaluate> selectByEvaluateNo(String EvaluateNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_evaluate
     *
     * @mbggenerated
     */
    List<WorkEvaluate> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_evaluate
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(WorkEvaluate record);
    
    /**
     * 分页查询服务顾问评价列表
     * @param consultantId 服务顾问ID
     * @param start 起始下标
     * @param pageSize 每页行数
     * @return
     */
    List<WorkEvaluate> selectByConsultantId(@Param("consultantId") String consultantId, @Param("start") Integer start, @Param("pageSize") Integer pageSize);

    /**
     * 分页查询服务主管评价列表
     * @param supervisorId 服务主管ID
     * @param start 起始下标
     * @param pageSize 每页行数
     * @return
     */
    List<WorkEvaluate> selectByServiceSupervisorId(@Param("supervisorId") String supervisorId, @Param("start") Integer start, @Param("pageSize") Integer pageSize);

    /**
     * 分页查询车间组长评价列表
     * @param shopSupervisorId 车间组长ID
     * @param start 起始下标
     * @param pageSize 每页行数
     * @return
     */
    List<WorkEvaluate> selectByShopSupervisorId(@Param("shopSupervisorId") String shopSupervisorId, @Param("start") Integer start, @Param("pageSize") Integer pageSize);

    /**
     * 分页查询技师（维修）评价列表
     * @param shopSupervisorId 车间组长ID
     * @param start 起始下标
     * @param pageSize 每页行数
     * @return
     */
    List<WorkEvaluate> selectByRepairEngineerId(@Param("engineerId") String engineerId, @Param("start") Integer start, @Param("pageSize") Integer pageSize);

    /**
     * 分页查询洗车组长评价列表
     * @param washLeaderId 洗车组长ID
     * @param start 起始下标
     * @param pageSize 每页行数
     * @return
     */
    List<WorkEvaluate> selectByWashLeaderId(@Param("washLeaderId") String washLeaderId, @Param("start") Integer start, @Param("pageSize") Integer pageSize);

    /**
     * 分页查询洗车师评价列表
     * @param washLeaderId 洗车组长ID
     * @param start 起始下标
     * @param pageSize 每页行数
     * @return
     */
    List<WorkEvaluate> selectByWashEngineerId(@Param("engineerId") String engineerId, @Param("start") Integer start, @Param("pageSize") Integer pageSize);
    
    /**
     * 分页查询服务主管评价列表总数
     * @param supervisorId 服务主管ID
     * @param start 起始下标
     * @param pageSize 每页行数
     * @return
     */
    int selectByServiceSupervisorIdTotal(@Param("supervisorId") String supervisorId);

    /**
     * 分页查询车间组长评价列表总数
     * @param shopSupervisorId 车间组长ID
     * @param start 起始下标
     * @param pageSize 每页行数
     * @return
     */
    int selectByShopSupervisorIdTotal(@Param("shopSupervisorId") String shopSupervisorId);

    /**
     * 分页查询洗车组长评价列表总数
     * @param washLeaderId 洗车组长ID
     * @param start 起始下标
     * @param pageSize 每页行数
     * @return
     */
    int selectByWashLeaderIdTotal(@Param("washLeaderId") String washLeaderId);

    /**
     * 分页查询洗车师评价列表总数
     * @param washLeaderId 洗车组长ID
     * @param start 起始下标
     * @param pageSize 每页行数
     * @return
     */
    int selectByWashEngineerIdTotal(@Param("engineerId") String engineerId);

    /**
     * 分页查询技师（维修）评价列表总数
     * @param washLeaderId 洗车组长ID
     * @param start 起始下标
     * @param pageSize 每页行数
     * @return
     */
    int selectByRepairEngineerIdTotal(@Param("engineerId") String engineerId);

    /**
     * 查询服务顾问总评价数和五星好评数
     * @param consultantId 服务顾问ID
     * @return
     */
    Map<String, String> selectCountConsultantEvaluate(String consultantId);
    
    /**
     * 查询服务顾问总评价数和评价总数
     * @param consultantId 服务顾问ID
     * @return
     */
    Map<String, String> selectConsultantEvaluateTotalAndCount(String consultantId);
}