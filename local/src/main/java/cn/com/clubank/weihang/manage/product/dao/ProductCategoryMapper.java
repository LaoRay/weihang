package cn.com.clubank.weihang.manage.product.dao;

import java.util.List;
import org.apache.ibatis.annotations.Param;

import cn.com.clubank.weihang.manage.product.pojo.ProductCategory;

/**
 * 产品类别表（数据访问层接口）
 * 
 * @author Liangwl
 *
 */
public interface ProductCategoryMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table product_category
	 *
	 * @mbggenerated
	 */
	int deleteByPrimaryKey(String categoryId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table product_category
	 *
	 * @mbggenerated
	 */
	int insert(ProductCategory record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table product_category
	 *
	 * @mbggenerated
	 */
	ProductCategory selectByPrimaryKey(String categoryId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table product_category
	 *
	 * @mbggenerated
	 */
	List<ProductCategory> selectAll();
	
	/**
	 * 根据父类型key查询前几个字分类
	 * @param parentKey
	 * @param num
	 * @return
	 */
	List<ProductCategory> selectByParentKey(@Param("parentKey") String parentKey, @Param("num") Integer num);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table product_category
	 *
	 * @mbggenerated
	 */
	int updateByPrimaryKey(ProductCategory record);

	/**
	 * 获取所有根分类列表
	 * 
	 * @return
	 */
	List<ProductCategory> selectAllRootCategory();
	
	/**
	 * 获取服务类根分类列表
	 * 
	 * @return
	 */
	List<ProductCategory> selectServiceRootCategory();
	
	/**
	 * 获取实体类根分类列表
	 * 
	 * @return
	 */
	List<ProductCategory> selectEntityRootCategory();

	/**
	 * 获取所有子分类(叶子节点)列表
	 * 
	 * @return
	 */
	List<ProductCategory> selectAllLeafCategory();

	/**
	 * 获取子分类列表（根据父分类ID）
	 * 
	 * @param parentId
	 *            父ID
	 * @return
	 */
	List<ProductCategory> selectSubclassification(String parentId);

	/**
	 * 分页查询：通过分类名模糊查询，进行分页
	 * 
	 * @param cname
	 *            分类名
	 * @param startIndex
	 *            起始索引
	 * @param pageSize
	 *            每页行数
	 * @return
	 */
	List<ProductCategory> findPage(@Param("cname") String cname, @Param("startIndex") Integer startIndex,
			@Param("pageSize") Integer pageSize);

	/**
	 * 按分类名模糊查询到的总条数
	 * 
	 * @param cname
	 *            分类名
	 * @return
	 */
	int findPageTotal(@Param("cname") String cname);

	/**
	 * 后台：编辑分类信息
	 * 
	 * @param category
	 * @return
	 */
	int updateSelectiveByPrimaryKey(ProductCategory category);
}